Access Receipts {#receipts}
=====================

The following operations pertain to
[Access Receipts](https://solid.github.io/data-interoperability-panel/specification/#receipts)
in the [[SAI|Solid Application Interoperability Specification]].

##  Deliver Access Receipt ##  {#deliver-access-receipt}

<table class="data operation" align="left">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr><th colspan=2>Description</th></tr>
  </thead>
  <tbody>
    <tr>
      <td colspan=2>

      This operation provides an [=Access Receipt=] for an [=Access Grant=]
      to a given [=Agent=] by delivering it to their access inbox.
      
      </td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Inputs</th></tr>
  </thead>
  <tbody>    
    <tr>
      <td>`GRANT`</td>
      <td>[=Access Grant=] to provide a receipt for</td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Outputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>[=Access Receipt=]</td>
      <td>for `GRANT` posted to the grantee [=Social Agent's=] access inbox</td>
    </tr>
  </tbody>
</table>

<div class="opdetails">

1. Let `RECEIPT` be an empty [=Access Receipt=]
1. Let `SUBJECT` be the [=Access Grant Subject=] linked via
    `GRANT hasAccessGrantSubject`
1. Let `GRANTEE` be `SUBJECT accessByAgent`
1. Let `GRANTOR` be the current [=Social Agent=]
1. Let `OWNER` be the [=Social Agent=] owner of the storage access is being granted from 
1. Let `RECEIPT fromAgent` be `OWNER`
1. Let `RECEIPT viaAgent` be `GRANTOR`
1. Let `RECEIPT providedAt` be the current time
1. Let `RECEIPT hasAccessGrantSubject` be `SUBJECT`
1. Let `RECEIPT hasAccessNeedGroup` be all [=Access Need Groups=]
    linked via `GRANT hasAccessNeedGroup`
1. Let `RECEIPT hasDataGrant` be all [=Data Grants=]
    linked via `GRANT hasDataGrant`
1. Let `RECEIPT hasTrustedGrant` be all [=Trusted Grants=]
    linked via `GRANT hasTrustedGrant`
1. Post `RECEIPT` to `GRANTEE hasAccessInbox`
1. Return `RECEIPT`

</div>


##  Process Access Receipt ##  {#process-access-receipt}

<table class="data operation" align="left">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr><th colspan=2>Description</th></tr>
  </thead>
  <tbody>
    <tr>
      <td colspan=2>

      This operation stores a new [=Access Receipt=] in
      an [=Access Grant Registry=]
      
      </td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Inputs</th></tr>
  </thead>  
  <tbody>    
    <tr>
      <td>`RECEIPT`</td>
      <td>[=Access Receipt=] to record</td>
    </tr>
    <tr>
      <td>`REGISTRY`</td>
      <td>[=Access Receipt Registry=] to store receipts in</td>
    </tr>
  </tbody>
  <thead>
    <tr><th colspan=2>Outputs</th></tr>
  </thead>
  <tbody>
    <tr>
      <td>[=Access Receipt=]</td>
      <td>Stored in `REGISTRY`</td>
    </tr>
  </tbody>
</table>

<div class="opdetails">

1. Let `CURRENT` be an [=Access Receipt=] received from another [=Social Agent=]
1. If `CURRENT` is empty
    1. Add `RECEIPT` to `REGISTRY`
    1. Link `RECEIPT` to `REGISTRY` via `REGISTRY hasRegistration`
1. If `CURRENT` is not empty
    1. Update `CURRENT` with `RECEIPT`
1. Update the Agent Registry with inputs: `RECEIPT`.
1. Return `RECEIPT`

</div>
